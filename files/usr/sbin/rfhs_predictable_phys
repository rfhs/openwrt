#!/bin/sh
set -e

listallphys() {
  unset all_phys
  for i in /sys/class/ieee80211/*; do
    all_phys="${all_phys} $(basename "${i}")"
  done
  if [ "${verbose}" = "true" ]; then
    printf "%s" "${all_phys}"
  fi
}

getphybands() {
  # band 1 2.4 GHz
  # band 2 5.x GHz
  # band 3 60 GHz
  # band 4 6.x GHz
  # band 5 900 MHz
  unset bands
  bands="$(iw "${phy}" info | sed -n -e '/Band [[:digit:]]:/p' | sed -e 's/.*Band //g' -e 's/://g' | xargs)"
}

reset_names() {
  listallphys
  unset phy
  for phy in ${all_phys}; do
    if [ "${phy}" = "${phy/badphy}" ]; then
      for num in $(seq 0 100); do
        if [ ! -L "/sys/class/ieee80211/badphy${num}" ]; then
          iw phy "${phy}" set name "badphy${num}"
	  break
	 fi
      done
    fi
  done
}

assign_phy() {
  case "${1}" in
    twofour)
      iw phy "${phy}" set name "zphy${twofourphy}b"
      twofourphy=$((twofourphy + 1))
      ;;
    five)
      iw phy "${phy}" set name "zphy${fivephy}a"
      fivephy="$((fivephy + 1))"
      ;;
    six)
      iw phy "${phy}" set name "zphy${sixphy}e"
      sixphy="$((sixphy + 1))"
      ;;
    sixty)
      iw phy "${phy}" set name "zphy${sixtyphy}ad"
      sixtyphy="$((sixtyphy + 1))"
      ;;
    *)
      printf "assign_phy called with invalid %s\n" "${1}"
      exit 1
      ;;
  esac
}

assign_singles() {
  listallphys
  unset phy
  for phy in ${all_phys}; do
    if [ "${phy}" != "${phy/zphy}" ]; then
      continue
    fi
    getphybands "${phy}"
    if [ "$(printf "%s" "${bands}" | wc -w)" = "1" ]; then
      case "${bands}" in
        1)
          assign_phy twofour
          ;;
        2)
          assign_phy five
          ;;
        3)
          assign_phy sixty
          ;;
        4)
          assign_phy six
          ;;
        *)
          printf "Boom goes the dynamite, this script is not expecting band %s support on %s\n" "${bands}" "${phy}"
          exit 1
          ;;
      esac
    fi
  done
}

assign_remaining() {
  listallphys
  unset phy
  for phy in ${all_phys}; do
    if [ "${phy}" != "${phy/zphy}" ]; then
      continue
    fi
    getphybands "${phy}"
    case "${bands}" in
      '1 2')
        if [ "${fivephy}" -lt "${twofourphy}" ]; then
          assign_phy five
        else
          assign_phy twofour
        fi
        ;;
      '1 2 4')
        if [ "${sixphy}" = "0" ]; then
          assign_phy six
        elif [ "${fivephy}" -lt "${twofourphy}" ]; then
          assign_phy five
        else
          assign_phy twofour
        fi
        ;;
      '2 4')
        if [ "${sixphy}" -lt "${fivephy}" ]; then
          assign_phy six
        else
          assign_phy five
        fi
        ;;
      '1 2 4 5')
        # we ignore band 5 for now
        # treat this like 1 2 4
        if [ "${sixphy}" -lt "${fivephy}" ]; then
          assign_phy six
        #elif [ "${sixphy}" = "0" ]; then
        #  assign_phy six
        elif [ "${fivephy}" -lt "${twofourphy}" ]; then
          assign_phy five
        else
          assign_phy twofour
        fi
        ;;
      *)
        printf "Boom goes the dynamite, this script is not expecting bands %s support on %s\n" "${bands}" "${phy}"
        exit 1
        ;;
    esac
  done
}

if [ ! -f "/.dockerenv" ]; then
  # we don't use mac80211_hwsim on hardware
  lsmod | grep -q mac80211_hwsim && rmmod mac80211_hwsim
fi

printf "Preexisting phys: %s\n" "$(listallphys)"

if [ "${1-}" = "reset" ]; then
  reset_names
fi
if [ "${1}" = "verbose" ]; then
  verbose="true"
else
  verbose="false"
fi

twofourphy="0"
fivephy="0"
sixphy="0"
sixtyphy="0"
assign_singles
assign_remaining

printf "Predictably named phys: %s\n" "$(listallphys)"
